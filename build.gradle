buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        mavenCentral()
        maven { url = "https://maven.parchmentmc.org" }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '6.0.11', changing: true
        classpath group: 'org.parchmentmc', name: 'librarian', version: '1.2.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

version = '1.0.2'
group = 'org.teacon'
archivesBaseName = 'TeaChat-Forge-1.20'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'parchment', version: '2023.07.16-1.20.1'
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'info'
            property 'tea_chat.dev', 'true'
            args '--username', 'Dev-###'
            mods {
                tea_chat {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run_server')
            property 'forge.logging.console.level', 'info'
            mods {
                tea_chat {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.1.1'

    // Yes you see this right, LuckPerms.
    // This is for our custom ContextCalculator support.
    compileOnly 'net.luckperms:api:5.4'

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.mockito:mockito-core:5.4.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.4.0'
}

test {
    useJUnitPlatform()
}

mixin {}

jar {
    manifest {
        attributes([
            "Specification-Title": "TeaChat",
            "Specification-Vendor": "TeaConMC",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor": "TeaConMC"
        ])
    }
}

jar.finalizedBy('reobfJar')
publish.dependsOn('reobfJar')
publishing {
    publications {
        release(MavenPublication) {
            groupId = "org.teacon"
            artifactId = "TeaChat-Forge-1.20"

            artifact jar
            pom {
                name = 'TeaChat for Minecraft 1.20'
                description = 'Add prefixes and suffixes from LuckPerms to player display names.'
                url = 'https://github.com/teaconmc/TeaChat'
                licenses {
                    license {
                        name = 'BSD-3-Clause'
                        url = 'https://github.com/teaconmc/TeaChat/blob/1.20-forge/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = '3TUSK'
                        name = '3TUSK'
                    }
                }
                issueManagement {
                    system = 'GitHub Issues'
                    url = 'https://github.com/teaconmc/TeaChat/issues'
                }
                scm {
                    url = 'https://github.com/teaconmc/TeaChat'
                    connection = 'scm:git:git://github.com/teaconmc/TeaChat.git'
                    developerConnection = 'scm:git:git@github.com:teaconmc/TeaChat.git'
                }
            }
        }
    }
    repositories {
        maven {
            name = "teacon"
            url = "s3://maven/"
            credentials(AwsCredentials) {
                accessKey = System.env.ARCHIVE_ACCESS_KEY
                secretKey = System.env.ARCHIVE_SECRET_KEY
            }
        }
    }
}

tasks.withType(PublishToMavenRepository) {
    onlyIf {
        System.env.ARCHIVE_ACCESS_KEY && System.env.ARCHIVE_SECRET_KEY
    }
}

/**
 * A simple task to pass down the artifact name and path to other GitHub actions.
 */
task("githubActionOutput") {
    onlyIf {
        System.env.GITHUB_ACTIONS
    }
    doLast {
        def output = new File(System.env.GITHUB_OUTPUT)
        def newLine = System.getProperty('line.separator')
        output << newLine << "artifact_path=${jar.archiveFile.get().asFile.absolutePath}"
        output << newLine << "artifact_name=${jar.archiveFileName.get()}"
    }
}
